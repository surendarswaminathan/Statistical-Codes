VIF is based on independent Variables. Does not matter if the dependent variable is Logistic , multiclass or Continuous
import pandas as pd
df = pd.read_csv('C:\Users\s0s01rl\Desktop\Shutterfly\CompleteData_1.csv')

def vif_cal(input_data,dependent_col):
    import statsmodels.formula.api as sm
    x_vars=input_data.drop([dependent_col],axis=1)
    xvar_names=x_vars.columns
    for i in range(0,xvar_names.shape[0]):
        y=x_vars[xvar_names[i]]
        x=x_vars[xvar_names.drop(xvar_names[i])]
        rsq=sm.ols(formula="y~x",data=x_vars).fit().rsquared
        vif=round(1/(1-rsq),2)
        print (xvar_names[i],"VIF =",vif)
        
vif_cal(input_data=df,dependent_col="revenue")
X = df.iloc[:, 1:].values  
y = df.iloc[:, 0].values  
from sklearn.model_selection import train_test_split
#------------ Logistic Regression -0.82
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=0)
from sklearn.linear_model import LogisticRegression
logisticRegr = LogisticRegression(solver = 'lbfgs')
result=logisticRegr.fit(X_train, y_train)
logisticRegr.score(X_test, y_test)

#--------------SVM -0.82
from sklearn.svm import LinearSVC
svm=LinearSVC(C=1.0,penalty='l1',max_iter=3000,dual=False)
clf = svm.fit(X_train, y_train)
clf.score(X_test, y_test)
#---------------Random FOrest depth 2 :0.83
from sklearn.ensemble import RandomForestClassifier

classifier = RandomForestClassifier(max_depth=3, random_state=0)

classifier.fit(X_train, y_train)  
y_pred = classifier.predict(X_test) 
from sklearn.metrics import confusion_matrix  
from sklearn.metrics import accuracy_score

cm = confusion_matrix(y_test, y_pred)  
print(cm)  
print('Accuracy' + str(accuracy_score(y_test, y_pred)))  

